# import * from './generated/prisma.graphql'

type Query {
  me: User
  searchGames(search: String!): [Game!]!
  todaySessions: [IndividualGamingSession!]!
}

type Mutation {
  signup(input: SignupInput!): AuthPayload!
  login(input: LoginInput!): AuthPayload!
  createGamerRequest(
    input: CreateGamerRequestInput!
  ): CreateGamerRequestPayload!
  respondToGamerRequest(
    input: RespondToGamerRequestInput!
  ): RespondToGamerRequestPayload!
  createGame(input: CreateGameInput!): CreateGamePayload!
  createGamingSession(
    input: CreateGamingSessionInput!
  ): CreateGamingSessionPayload!
  createIndividualGamingSession(
    input: CreateIndividualGamingSessionInput!
  ): CreateIndividualGamingSessionPayload!
}

type AuthPayload {
  token: String!
  user: User!
}

input SocialMediaInput {
  twitter: String
  facebook: String
  youtube: String
  instagram: String
  twitch: String
  snapchat: String
}

input CreateGamerRequestInput {
  occupations: [Occupations!]!
  addToOccupations: String
  socialMedia: SocialMediaInput!
}

input CreateIndividualGamingSessionInput {
  startTime: DateTime!
  gamingSessionId: String!
}

type CreateIndividualGamingSessionPayload {
  created: Boolean!
  overlap: Boolean
  individualGamingSession: IndividualGamingSession
  msg: String
}

input CreateGamingSessionInput {
  gameName: String!
  gamersIds: [String!]!
  title: String!
  length: Int!
  price: Int!
  type: TypeOfGame!
  slots: Int!
  systems: [System!]!
}

type CreateGamingSessionPayload {
  gamingSession: GamingSession
  msg: String
  created: Boolean!
}

type CreateGamerRequestPayload {
  created: Boolean!
  request: GamerRequest
  msg: String
}

input RespondToGamerRequestInput {
  gamerRequestId: String!
  userId: String!
  decision: Decision!
}

input CreateGameInput {
  tags: [Tags!]!
  name: String!
}

type CreateGamePayload {
  created: Boolean!
  game: Game
  msg: String
}

enum Decision {
  ACCEPT
  DENY
}

type RespondToGamerRequestPayload {
  responded: Boolean!
  msg: String
}

type User {
  id: ID!
  email: String!
  name: String!
  username: String!
  currentGamerRequest: Boolean!
  isGamer: Boolean!
  sessions: [GamingSession!]!
  individualSessions: [IndividualGamingSession!]!
}

input SignupInput {
  email: String!
  password: String!
  name: String!
  username: String!
}

input LoginInput {
  email: String!
  password: String!
}
