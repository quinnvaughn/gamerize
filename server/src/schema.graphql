# import * from './generated/prisma.graphql'

type Query {
  me: User
}

type Mutation {
  signup(input: SignupInput!): AuthPayload!
  login(input: LoginInput!): AuthPayload!
  createGamerRequest(
    input: CreateGamerRequestInput!
  ): CreateGamerRequestPayload!
  respondToGamerRequest(
    input: RespondToGamerRequestInput!
  ): RespondToGamerRequestPayload!
}

type AuthPayload {
  token: String!
  user: User!
}

input SocialMediaInput {
  twitter: String
  facebook: String
  youtube: String
  instagram: String
  twitch: String
  snapchat: String
}

input CreateGamerRequestInput {
  occupations: [Occupations!]!
  addToOccupations: String
  socialMedia: SocialMediaInput!
}

type CreateGamerRequestPayload {
  created: Boolean!
  request: GamerRequest
  msg: String
}

input RespondToGamerRequestInput {
  ## currently not using this as not getting gamer request by ID.
  #gamerRequestId: String!
  userId: String!
  decision: Decision!
}

enum Decision {
  ACCEPT
  DENY
}

type RespondToGamerRequestPayload {
  responded: Boolean!
  msg: String
}

type User {
  id: ID!
  email: String!
  name: String!
  username: String!
  currentGamerRequest: Boolean!
}

input SignupInput {
  email: String!
  password: String!
  name: String!
  username: String!
}

input LoginInput {
  email: String!
  password: String!
}
